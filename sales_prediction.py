# -*- coding: utf-8 -*-
"""Sales_Prediction

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BZ99yC3zhpVzOSJcpn8Xant4zonbDfs5
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import r2_score

# Sample dataset
data = {
    'Month': ['Jan-2024', 'Feb-2024', 'Mar-2024', 'Apr-2024', 'May-2024', 'Jun-2024',
              'Jul-2024', 'Aug-2024', 'Sep-2024', 'Oct-2024', 'Nov-2024', 'Dec-2024'],
    'Avg_Price': [9.5, 9.7, 9.4, 9.6, 9.8, 9.5, 9.6, 9.7, 9.4, 9.8, 9.5, 9.6],
    'Customers': [2000, 2050, 2100, 2080, 2150, 2020, 2180, 2120, 2000, 2200, 2070, 2150],
    'Promotions': [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1],
    'Sales': [50000, 52000, 51000, 52500, 54000, 51500, 53000, 54500, 50500, 55000, 51000, 53000]
}

# Create DataFrame
df = pd.DataFrame(data)

# Features and target
X = df[['Avg_Price', 'Customers', 'Promotions']]
y = df['Sales']

# Train-test split (80/20)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Model training
model = LinearRegression()
model.fit(X_train, y_train)

# Predictions
y_pred = model.predict(X_test)

# R² score
r2 = r2_score(y_test, y_pred)
print(f"R² score: {r2:.4f}")

# Plot: Actual vs Predicted Sales
plt.figure(figsize=(8, 5))
plt.scatter(y_test, y_pred, color='blue', edgecolor='k')
plt.plot([y.min(), y.max()], [y.min(), y.max()], 'r--', lw=2)
plt.xlabel("Actual Sales")
plt.ylabel("Predicted Sales")
plt.title("Actual vs Predicted Sales")
plt.grid(True)
plt.tight_layout()
plt.savefig("sales_prediction.png")
plt.close()

print("Plot saved as 'sales_prediction.png'")